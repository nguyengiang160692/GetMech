<!DOCsTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel="stylesheet" href='/bootstrap/css/bootstrap.min.css'>
    <link rel="stylesheet" href='/bootstrap/css/bootstrap-theme.min.css'>
    <link rel="stylesheet" href='/bootstrap/css/dashboard.css'>
    <link rel='stylesheet' href='/stylesheets/style.css'/>
</head>
<body>
<nav class="navbar navbar-inverse navbar-fixed-top">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Info Centre</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <form class="navbar-form navbar-right">
                <input class="form-control" placeholder="Search..." type="text">
            </form>
        </div>
    </div>
</nav>
<div class="container-fluid">
    <div class="row">
        <div class="col-sm-3 col-md-2 sidebar">
            <ul class="nav nav-sidebar">
                <li class="active">
                    <a href="#">Overview
                        <span class="sr-only">(current)</span>
                    </a>
                </li>
                <li>
                    <a onclick="page.addLink()" href="#">Add Link</a>
                </li>
            </ul>
        </div>
        <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
            <h1 class="page-header">Dashboard</h1>
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-striped" id="ContentContainer">
                        <thead>
                        <tr>
                            <th width="10%"></th>
                            <th width="20%">Title</th>
                            <th width="50%">Content</th>
                            <th width="20%"></th>
                        </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="addLink" tabindex="-1" role="dialog" aria-labelledby="addLinkLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="addLinkLabel">Link</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <input type="hidden" name="linkID" value="">
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Url</label>
                        <div class="col-sm-10">
                            <input name="url" type="text" class="form-control" placeholder="Url to leech">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Title</label>
                        <div class="col-sm-10">
                            <input name="title" type="text" class="form-control" placeholder="Title">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Type</label>
                        <div class="col-sm-10">
                            <select name="fn[fnType]" class="form-control" placeholder="Type">
                                <option value="0">Choose type</option>
                                <option value="customHeader">customHeader</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group hide" data-interact="fn[fnType]" data-type="customHeader">
                        <label class="col-md-2 control-label">Header</label>
                        <div class="col-md-10">
                            <button class="btn btn-default" type="button" onclick="formAddLink.fn.addBlock()">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                Add parameter
                            </button>
                            OR
                            <button class="btn btn-default" type="button" onclick="formAddLink.fn.parseHeader()">
                                <span class="glyphicon glyphicon-paperclip" aria-hidden="true"></span>
                                Parse header string
                            </button>
                        </div>
                    </div>
                    <div class="form-group hide" data-interact="fn[fnType]" data-type="customHeader">
                        <div class="col-md-10 col-md-offset-2" id="paramBlockList1">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Selector</label>
                        <div class="col-md-2">
                            <button class="btn btn-default" type="button" onclick="formAddLink.fn.addBlockSelector()">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                Add selector
                            </button>
                        </div>
                    </div>
                    <div class="form-group ">
                        <div class="col-md-10 col-md-offset-2" id="paramBlockList2">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Notify</label>
                        <div class="col-sm-10">
                            <label class="radio-inline">
                                <input type="radio" name="notify[toggle]" value="1"> Yes
                            </label>
                            <label class="radio-inline">
                                <input type="radio" name="notify[toggle]" value="0"> No
                            </label>
                        </div>
                    </div>
                    <div class="form-group hide" data-interact="notify[toggle]">
                        <label class="col-sm-2 control-label">Condition</label>
                        <div class="col-md-2">
                            <button class="btn btn-default" type="button" onclick="formAddLink.fn.addBlockCondition()">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                Add condition
                            </button>
                        </div>
                    </div>
                    <div class="form-group hide" data-interact="notify[toggle]">
                        <div class="col-md-10 col-md-offset-2" id="paramBlockList3">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12 text-left" id="errorHandling">
                    </div>
                </div>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-default" onclick="formAddLink.saveLink()">Save link</button>
            </div>
        </div>
    </div>
</div>
<div id="modalContainer"></div>
<script src='/bootstrap/js/jquery.js'></script>
<script src='/bootstrap/js/bootstrap.min.js'></script>
<script src='/bower_components/underscore/underscore-min.js'></script>
<script>
    var page = {
        rawLinks   :[],
        getLink    :function(id){
            var that = this;
            $('#ContentContainer tbody tr#' + id).empty().append('<td align="center"><object data="/gear.svg" type="image/svg+xml"></object></td>');
            $.get('/leecher/showLeechedData', {
                id:id
            }, function(res){
                var item = res.message;
                var html = '';

                if(item.notify.toggle){
                    html += '    <td><span class="glyphicon glyphicon-volume-up" aria-hidden="true"></span></td>';

                }else{
                    html += '    <td></td>';
                }

                html += '    <td>' + item.title + '<p><small><a target="_blank" href="' + item.url + '">' + item.url + '</a></small></p></td>';

                var subHtml = '';

                for(var y = 0 ; y < item.content.length ; y++){
                    subHtml += '<div class="col-sm-6 item item' + item._id + ' margin-hr-10" data-order="' + y + '"><b>' + item.content[y].label + ':</b><br>' + item.content[y].html + '</div>';
                }

                html += '<td>';
                html += '<div class="pre-scrollable small-font row">';
                html += subHtml;
                html += '</div>';
                html += '</td>';
                html += '    <td>' +
                        '       <button class="btn btn-default" onclick="page.editLink(\'' + item._id + '\')"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></button>' +
                        '       <button class="btn btn-default" onclick="page.getLink(\'' + item._id + '\')"><span class="glyphicon glyphicon-repeat" aria-hidden="true"></span></button>' +
                        '       <button class="btn btn-default" onclick="page.removeLink(\'' + item._id + '\')"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>' +
                        '    </td>';

                $('#ContentContainer tbody tr#' + item._id).empty().append(html);
                that.checkNotify(item);
            });
        },
        allLinks   :function(){
            var that = this;
            $.get('/leecher', {}, function(res){
                var html      = '';
                that.rawLinks = res.message;
                for(var x = 0 ; x < res.message.length ; x++){
                    var item = res.message[x];
                    html += '<tr id="' + item._id + '"></tr>';
                    that.getLink(item._id);
                }
                $('#ContentContainer tbody').empty().append(html);
            });
        },
        addLink    :function(){
            $('#addLink').modal('show');
            formAddLink.resetForm();
        },
        editLink   :function(_id){
            $.get('/leecher/show', {
                id:_id
            }, function(res){
                $('#addLink').modal('show');
                formAddLink.resetForm();
                formAddLink.renderForm(res.message);
            });
        },
        removeLink :function(_id){
            if(confirm("Remove it?")){
                $.post('/leecher/remove', {
                    id:_id
                }, function(res){
                    if(res.result)
                        page.allLinks();
                });
            }
        },
        checkNotify:function(item){
            var that = this;
            if(item.notify.toggle){
                _.each(item.notify.conditions, function(cond){
                    function success(){
                        $('.item' + item._id).closest('tr').addClass('info');
                    }

                    switch(cond.condition){
                        case 'visible':
                            _.each(item.content, function(cont){
                                if(cont.label == cond.param){
                                    if($('.item' + item._id).find(cond.value).is(":visible")){
                                        success();
                                    }
                                }
                            });
                            break;
                        case 'haveClassOrId':
                            _.each(item.content, function(cont){
                                if(cont.label == cond.param){
                                    if($(cont.html).hasClass(cond.value) || $(cont.html).attr('id') == cont.id){
                                        success();
                                    }
                                }
                            });
                            break;
                        case 'containwords':
                            var arrString = [];
                            arrString     = cond.value.split(',');
                            var found     = 0;
                            _.each(item.content, function(cont, key){
                                if(cont.label == cond.param){
                                    for(var x = 0 ; x < arrString.length ; x++){
                                        var contain = false;
                                        if(cont.html.contains(arrString[x])){
                                            contain = true;
                                        }

                                        if(contain){
                                            $('.item' + item._id + '[data-order="' + key + '"]').addClass('success-bold');
                                            found++;

                                            break;
                                        }
                                    }

                                }
                            });

                            if(found > 0) success();

                            break;
                    }
                })
            }
        }
    };
    function notify(type, message){
        if(type){
            $('#errorHandling').html('<div class="alert alert-success" role="alert"> <a href="#" class="alert-link">' + message + '</a> </div>');
        }else{
            $('#errorHandling').html('<div class="alert alert-danger" role="alert"> <a href="#" class="alert-link">' + message + '</a> </div>');
        }
    }
    var formAddLink = {
        resetForm :function(){
            $('input[name="linkID"]').val('');
            //fill the data in
            $('input[name="url"]').val('');
            $('input[name="title"]').val('');

            $('select[name="fn[fnType]"]').val('');
            $("select[name='fn[fnType]']").trigger('change');

            $('#paramBlockList1').empty();
            $('#paramBlockList2').empty();
            $('#paramBlockList3').empty();

            $('#errorHandling').empty();

            var radios = $('input:radio[name="notify[toggle]"]');
            radios.filter('[value=0]').prop('checked', true);

        },
        renderForm:function(old){

            $('input[name="linkID"]').val(old._id);

            //fill the data in
            $('input[name="url"]').val(old.url);
            $('input[name="title"]').val(old.title);

            $('select[name="fn[fnType]"]').val(old.fn.fnType);
            $("select[name='fn[fnType]']").trigger('change');

            _.each(old.fn.fnParams, function(param){
                formAddLink.fn.addBlock(param.name, param.value);
            });

            _.each(old.selectors, function(selec){
                formAddLink.fn.addBlockSelector(selec.label, selec.value);
            });
            _.each(old.notify.conditions, function(condi){
                formAddLink.fn.addBlockCondition(condi.param, condi.condition, condi.value);
            });
            formAddLink.fn.renderCondition();

            var radios = $('input:radio[name="notify[toggle]"]');
            radios.filter('[value=' + old.notify.toggle + ']').prop('checked', true);

            changeNotify();

        },
        saveLink  :function(){
            var data = $('#addLink form').serializeArray();

            $.post('/leecher/saveLink', data, function(res){
                if(res.result){
                    notify(res.result, 'OK');
                    page.allLinks();
                }else{
                    notify(res.result, res.message);
                }

            });
        },
        fn        :{
            currentIndex     :0,
            addBlock         :function(name, value){
                this.currentIndex++;

                name  = !_.isUndefined(name) ? name : '';
                value = !_.isUndefined(value) ? value : '';

                var html = '';

                html += ' <div class="form-group">';
                html += '     <div class="col-sm-4">';
                html += '         <input value="' + name + '" name="fn[fnParams][' + this.currentIndex + '][name]" type="text" class="form-control" placeholder="Name">';
                html += '     </div>';
                html += '     <div class="col-sm-6">';
                html += '         <input  value="' + value + '" name="fn[fnParams][' + this.currentIndex + '][value]" type="text" class="form-control" placeholder="Value">';
                html += '     </div>';
                html += '     <div class="col-sm-2 text-right">';
                html += '         <button class="btn btn-default" type="button" onclick="formAddLink.fn.removeBlock(this,\'.form-group\')">';
                html += '             <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>';
                html += '         </button>';
                html += '     </div>';
                html += ' </div>';
                $('#paramBlockList1').append(html);

            },
            addBlockSelector :function(label, value){
                this.currentIndex++;

                label = !_.isUndefined(label) ? label : '';
                value = !_.isUndefined(value) ? value : '';

                var html = '';
                html += '<div class="form-group">';
                html += '   <div class="col-sm-4">';
                html += '       <input value="' + label + '"  name="selectors[' + this.currentIndex + '][label]" type="text" class="form-control" placeholder="Label">';
                html += '   </div>';
                html += '   <div class="col-sm-7">';
                html += '       <input value="' + value + '"  name="selectors[' + this.currentIndex + '][value]" type="text" class="form-control" placeholder="Value">';
                html += '       <span class="help-block helper-order-' + this.currentIndex + ' small-font helper-condititon ">Html Selector or JSON selector <a href="http://jsonselector.com/process">http://jsonselector.com/process</a></span>';
                html += '   </div>';
                html += '   <div class="col-sm-1 text-right">';
                html += '      <button class="btn btn-default" type="button" onclick="formAddLink.fn.removeBlock(this,\'.form-group\')">';
                html += '          <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>';
                html += '      </button>';
                html += '   </div>';
                html += ' </div>';
                $('#paramBlockList2').append(html);
            },
            addBlockCondition:function(param, condition, value){
                this.currentIndex++;

                param     = !_.isUndefined(param) ? param : '';
                condition = !_.isUndefined(condition) ? condition : '';
                value     = !_.isUndefined(value) ? value : '';

                var html = '';
                html += '<div class="form-group">';
                html += '   <div class="col-sm-4">';
                html += '       <select onclick="formAddLink.fn.renderCondition()" data-value="' + param + '" class="form-control select-param" name="notify[conditions][' + this.currentIndex + '][param]">';

                html += '       </select>';
                html += '   </div>';
                html += '   <div class="col-sm-2">';
                html += '       <select data-order="' + this.currentIndex + '" data-condition="' + condition + '"  class="form-control select-condition" name="notify[conditions][' + this.currentIndex + '][condition]">';
                html += '           <option value="equal">Equal</option>';
                html += '           <option value="notequal">Not Equal</option>';
                html += '           <option value="visible">Visible</option>';
                html += '           <option value="haveClassOrId">Has Class or ID</option>';
                html += '           <option value="containwords">Contain words</option>';
                html += '       </select>';
                html += '   </div>';
                html += '   <div class="col-sm-5">';
                html += '       <input value="' + value + '"  name="notify[conditions][' + this.currentIndex + '][value]" type="text" class="form-control" placeholder="Value, Words (abc,xyz)">';
                html += '       <span class="help-block helper-order-' + this.currentIndex + ' small-font helper-condititon hide" data-condition="visible">Class like .abc or #abc that can visible</span>';
                html += '       <span class="help-block helper-order-' + this.currentIndex + ' small-font helper-condititon hide" data-condition="haveClassOrId">Class like .abc or #abc</span>';
                html += '       <span class="help-block helper-order-' + this.currentIndex + ' small-font helper-condititon hide" data-condition="containwords">This contains word like abc,xyz use ","</span>';
                html += '   </div>';
                html += '   <div class="col-sm-1 text-right">';
                html += '      <button class="btn btn-default" type="button" onclick="formAddLink.fn.removeBlock(this,\'.form-group\')">';
                html += '          <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>';
                html += '      </button>';
                html += '   </div>';
                html += ' </div>';
                $('#paramBlockList3').append(html);
            },
            renderCondition  :function(){
                var htmlSelect = '';
                $.each($('#paramBlockList2 .form-group .col-sm-4 .form-control'), function(index, ele){
                    if($(ele).val() != ""){
                        htmlSelect += '<option value="' + $(ele).val() + '">' + $(ele).val() + '</option>';
                    }
                });
                $('.select-param').html(htmlSelect);

                $('.select-param').unbind('change');
                $('.select-param').bind('change', function(){
                    $(this).data('value', $(this).val());
                });
                $(".select-param").each(function(key, value){
                    $(this).find("option[value='" + $(this).data('value') + "']").attr('selected', 'selected');
                });

                $('.select-condition').unbind('change');
                $('.select-condition').bind('change', function(){
                    $(this).data('condition', $(this).val());
                    var order = $(this).data('order');
                    $('.helper-condititon[data-condition="' + $(this).val() + '"].helper-order-' + order).siblings('.help-block').addClass('hide').end().removeClass('hide');
                });
                $(".select-condition").each(function(key, value){
                    $(this).find("option[value='" + $(this).data('condition') + "']").attr('selected', 'selected');
                });
            },
            removeBlock      :function(ele, cloestBlock){
                $(ele).closest(cloestBlock).remove();
            },
            parseHeader      :function(execute){
                if(execute){
                    var lines = $('#textareaParseHeader').val().split('\n');
                    for(var i = 0 ; i < lines.length ; i++){
                        var keyValue = lines[i].split(': ');
                        formAddLink.fn.addBlock(keyValue[0], keyValue[1]);
                    }
                    closeModal('parseHeader');
                    return true;
                }
                var html = '';
                html += '';
                html += ' <form class="form-horizontal">';
                html += '      <div class="form-group">';
                html += '          <label class="col-sm-2 control-label">Header</label>';
                html += '          <div class="col-sm-10">';
                html += '              <textarea id="textareaParseHeader" style="min-height:250px;" row="5" name="header" type="text" class="form-control" placeholder="Custom header "></textarea>';
                html += '          </div>';
                html += '      </div>';
                html += '  </form>';
                openModal('parseHeader', html, "formAddLink.fn.parseHeader(true)");
            }
        }
    };
    function openModal(id, body, submitFunc){
        var html = '';
        html += '   <div class="modal fade" id="' + id + '" tabindex="-1" role="dialog" aria-labelledby="addLinkLabel">';
        html += '        <div class="modal-dialog modal-lg" role="document">';
        html += '            <div class="modal-content">';
        html += '               <div class="modal-body">';
        html += body;
        html += '               </div>';
        html += '               <div class="modal-footer">';
        html += '                   <div class="row">';
        html += '                       <div class="col-md-12 text-left" id="errorHandling">';
        html += '                       </div>';
        html += '                   </div>';
        html += '                   <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>';
        html += '                   <button type="button" class="btn btn-default" onclick="' + submitFunc + '">OK</button>';
        html += '               </div>';
        html += '           </div>';
        html += '       </div>';
        html += '   </div>';
        $('body #modalContainer').empty().append(html);
        $('body #modalContainer #' + id).modal('show');

        $(document).on('hidden.bs.modal', '.modal', function(){
            $('.modal:visible').length && $(document.body).addClass('modal-open');
        });
    }
    function closeModal(id){
        $('body #modalContainer #' + id).modal('hide');
    }
    function changeType(){
        $("select[name='fn[fnType]']").on('change', function(e){
            function showOptions(type){

                var showType = $('.form-group').filter(function(){
                    return $(this).data('interact') == 'fn[fnType]' && $(this).data('type') == type
                });

                showType.removeClass('hide');
            }

            $('.form-group[data-interact]').addClass('hide');

            var type = $(this).val();
            switch(type){
                case 'customHeader':
                    showOptions('customHeader');
                    //bind more here
                    break;
            }
        });
        $("select[name='fn[fnType]']").trigger('change');
    }
    function changeNotify(){
        $('input[name="notify[toggle]"]').unbind('change');
        $('input[name="notify[toggle]"]').bind('change', function(){
            if($('input[name="notify[toggle]"]:checked').val() == 1){
                $('.form-group[data-interact="notify[toggle]"]').removeClass('hide');
            }else{
                $('.form-group[data-interact="notify[toggle]"]').addClass('hide');
            }
        });
        $('input[name="notify[toggle]"]').trigger('change');
    }

    var reloadTime = null;

    $(document).ready(function(){
        changeType();
        changeNotify();
        page.allLinks();
        reloadTime = setInterval(function(){
            page.allLinks();
        }, 5 * 60000);
    });
</script>
</body>
</html>
